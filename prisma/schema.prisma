generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  contentChecks ContentCheck[]
  chatSessions  ChatSession[]
}

model ContentCheck {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  type        String   // "image", "article", "video"
  content     String   // URL or content text
  riskScore   Float?
  summary     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  licenses    License[]
  violations  Violation[]
}

model License {
  id            String       @id @default(cuid())
  contentCheckId String
  contentCheck   ContentCheck @relation(fields: [contentCheckId], references: [id])
  type          String       // e.g., "CC-BY", "MIT", "Commercial"
  description   String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Violation {
  id            String       @id @default(cuid())
  contentCheckId String
  contentCheck   ContentCheck @relation(fields: [contentCheckId], references: [id])
  type          String       // e.g., "Copyright", "Trademark", "Privacy"
  description   String
  severity      String       // "low", "medium", "high"
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model ChatSession {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id            String       @id @default(cuid())
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id])
  role          String       // "user" or "assistant"
  content       String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
} 